name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurar o .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Set Environment Variables
      run: echo "ConnectionStrings__DefaultConnection=${{ secrets.CONNECTION_STRING }}" >> $GITHUB_ENV

    - name: Restaurar dependências
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Testar
      run: dotnet test --no-build --verbosity normal

    - name: Buildar a imagem Docker
      run: docker build -t ghcr.io/${{ github.repository }}/learningTdd:latest .

    - name: Push da imagem para o GitHub Packages
      run: docker push ghcr.io/${{ github.repository }}/learningTdd:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy para a VM via SSH
      uses: appleboy/ssh-action@v0.1.17
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          # Atualizar a imagem Docker
          docker pull ghcr.io/${{ github.repository }}/learningTdd:latest

          # Parar e remover o container existente, se houver
          docker stop learningTdd || true
          docker rm learningTdd || true

          # Rodar o novo container
          docker run -d -p 8080:8080  --name learningTdd --network tdd_network ghcr.io/${{ github.repository }}/learningTdd:latest
