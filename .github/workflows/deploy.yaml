name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurar o .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restaurar dependências
      run: dotnet restore ./LearningTDD/LearningTDD.sln

    - name: Build
      run: dotnet build --no-restore --configuration Release ./LearningTDD/LearningTDD.sln

    - name: Testar
      run: dotnet test --no-build --configuration Release --verbosity normal ./LearningTDD/LearningTDD.sln

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy para a VM via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          # Navegar para o diretório /var/api
          if [ ! -d /var/api ]; then
            sudo mkdir -p /var/api
            sudo chown $USER:$USER /var/api
          fi
          cd /var/api/LearningTDD

          # Clonar o repositório se ainda não estiver clonado
          if [ ! -d /var/api/LearningTDD ]; then
            git clone https://github.com/Fekler/learningtdd.git LearningTDD
          fi

          # Navegar para o diretório do repositório

          # Puxar as últimas alterações do repositório
          git pull origin main

          # Construir e executar o Docker container na VM
          sudo docker build -t learningtdd:latest -f LearningTDD/learningtdd/Dockerfile LearningTDD/learningtdd
          sudo docker stop learningtdd || true
          sudo docker rm learningtdd || true
          sudo docker run -d --name learningtdd learningtdd:latest
