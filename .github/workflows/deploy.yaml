name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurar o .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Set Environment Variables
      run: |
        echo "ENVIRONMENT=Development" >> $GITHUB_ENV
        echo "ConnectionStrings__DefaultConnection=${{ secrets.CONNECTION_STRING }}" >> $GITHUB_ENV

    - name: Restaurar dependências
      run: dotnet restore ./LearningTDD/LearningTDD.sln

    - name: Build
      run: dotnet build --no-restore --configuration Release ./LearningTDD/LearningTDD.sln

    - name: Testar
      run: dotnet test --no-build --configuration Release --verbosity normal ./LearningTDD/LearningTDD.sln

  docker-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configurar QEMU para builds multi-arquitetura
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push Docker image
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --tag ghcr.io/fekler/learningtdd/learningtdd:latest \
          --file LearningTDD/Dockerfile \
          --push \
          LearningTDD/

  deploy:
    needs: docker-build

    runs-on: ubuntu-latest

    steps:
    - name: Deploy para a VM via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          echo ${{ secrets.GHCR_DOWNLOAD }} | docker login ghcr.io -u fekler --password-stdin
          sudo docker pull ghcr.io/fekler/learningtdd/learningtdd:latest
          sudo docker stop learningtdd || true
          sudo docker rm learningtdd || true
          sudo docker run -d -p 8080:8080 --name learningtdd --network tdd_network ghcr.io/fekler/learningtdd/learningtdd:latest
          exit
